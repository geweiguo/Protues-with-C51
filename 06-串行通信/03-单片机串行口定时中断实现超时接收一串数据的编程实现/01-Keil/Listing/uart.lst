C51 COMPILER V9.01   UART                                                                  12/05/2022 13:54:10 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN ..\Output\uart.obj
COMPILER INVOKED BY: E:\Program Files (x86)\Keil\C51\BIN\C51.EXE ..\Source\uart.c BROWSE DEBUG OBJECTEXTEND PRINT(..\Lis
                    -ting\uart.lst) OBJECT(..\Output\uart.obj)

line level    source

   1          #include <reg51.h>
   2          #include <stdio.h>
   3          #include "uart.h"
   4          
   5          unsigned char RecBuf[MAXREC] = 0;
   6          unsigned char timeCnt = 0;
   7          unsigned char RecCnt = 0;
   8          unsigned char Recflag = 0;
   9          unsigned char Start_timer = 0;
  10          
  11          void UartInit(void)             //9600bps@11.0592MHz
  12          {
  13   1              PCON &= 0x7F;           //波特率不倍速
  14   1              SCON = 0x50;            //8位数据,可变波特率
  15   1              AUXR &= 0xBF;           //定时器1时钟为Fosc/12,即12T
  16   1              AUXR &= 0xFE;           //串口1选择定时器1为波特率发生器
  17   1              TMOD &= 0x0F;           //清除定时器1模式位
  18   1              TMOD |= 0x20;           //设定定时器1为8位自动重装方式
  19   1              TL1 = 0xFD;             //设定定时初值
  20   1              TH1 = 0xFD;             //设定定时器重装值
  21   1              ET1 = 0;                //禁止定时器1中断
  22   1          ES  = 1;        //串口中断打开
  23   1              TR1 = 1;                //启动定时器1
  24   1      
  25   1      }
  26          
  27          void SentByte(unsigned char dat)   //发送一个字节
  28          {
  29   1          SBUF = dat;
  30   1          while(!TI);
  31   1          TI = 0;
  32   1      }
  33          
  34          void SendString(unsigned char *dat) //发送一串字符 Hello World!
  35          {
  36   1          while(*dat != '\0')
  37   1          {
  38   2             SentByte(*dat++); 
  39   2          }
  40   1      
  41   1      }
  42          
  43          char putchar(char c)   //printf 函数重定向
  44          {
  45   1           SentByte(c);
  46   1           return c;
  47   1      }
  48          
  49          /***************************************************************
  50          1、中断服务函数一定是一个没有返回值的函数；
  51          2、中断服务函数一定是没有参数的函数；
  52          3、中断服务函数函数名后跟关键字 interrupt “n”  
  53          4、n是中断向量入口地址值，n取值：0~4 共5个中断源 8*n + 0003H
  54                                                             0   0003H INT0
C51 COMPILER V9.01   UART                                                                  12/05/2022 13:54:10 PAGE 2   

  55                                                             1   000BH T0
  56                                                             2   0013H INT1
  57                                                             3   001BH T1
  58                                                             4   0023H ES
  59          5、中断服务函数不能被主程序或其它程序所调用
  60          6、n后面跟using m （0-3）工作寄存器组
  61          ***************************************************************/
  62          
  63          void Rec_ISR() interrupt 4
  64          {
  65   1          
  66   1          if(RI)
  67   1          {   
  68   2              RI = 0;
  69   2              Start_timer = 1;   //1、每接收第一帧数据，打开定时器，去计数         
  70   2              if(RecCnt < MAXREC)
  71   2              {
  72   3                 RecBuf[RecCnt] = SBUF;//接收数据到缓冲区，注意缓冲区大小
  73   3                 RecCnt ++; 
  74   3              }
  75   2      
  76   2              else 
  77   2              {
  78   3                 RecCnt = MAXREC;
  79   3              }
  80   2              timeCnt = 0;  //3、每接收一帧数据，记得把定时计数清零 相当于喂狗
  81   2                            //但是在定时中断中会不断累加
  82   2          
  83   2          }
  84   1          if(TI)
  85   1          {
  86   2              TI = 0;    
  87   2          }
  88   1      }
  89          
  90          void Cls(unsigned char* buf)
  91          {
  92   1          unsigned char i = 0;
  93   1          for(i = 0;i < MAXREC;i++)
  94   1          {
  95   2              buf[i] = 0;    
  96   2          }
  97   1      
  98   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    163    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
