C51 COMPILER V9.01   MAIN                                                                  12/14/2022 12:14:45 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\Output\main.obj
COMPILER INVOKED BY: E:\Program Files (x86)\Keil\C51\BIN\C51.EXE ..\Source\main.c BROWSE DEBUG OBJECTEXTEND PRINT(..\Lis
                    -ting\main.lst) OBJECT(..\Output\main.obj)

line level    source

   1          /****************************************
   2          程序功能：四位IO口
   3          *****************************************/
   4          #include <reg51.h>
   5          #include <stdio.h>
   6          #include "delay.h"
   7          #include "LCD1602.h"
   8          #include "Key.h"
   9          
  10          void StartMenu();
  11          void LCDShowService();
  12          void LCDShowSec();
  13          void LCDShowMin();
  14          void LCDShowHour();
  15          void Timer0Init();
  16          void Timer0ISR();
  17          void Init();
  18          void INT0_ISR();
  19          void INT1_ISR();
  20          void LCDShowSecBlink();
  21          void LCDShowMinBlink();
  22          void LCDShowHourBlink();
  23          unsigned char state = 0;
  24          unsigned char Sec  = 0;
  25          unsigned char Min  = 0;
  26          unsigned char Hour = 0;
  27          unsigned timerCnt  = 0;
  28          
  29          void main()
  30          {   
  31   1          Timer0Init();
  32   1          Init();
  33   1          LCDInit();
  34   1          DelayXms(10);
  35   1          StartMenu();
  36   1          DelayXms(2000);
  37   1          LCDWriteCmd(LCD_SCREEN_CLR);
  38   1          while(1)
  39   1          {  
  40   2              LCDShowService();
  41   2          }
  42   1      }
  43          void LCDShowService()
  44          {
  45   1          switch(state)
  46   1          {
  47   2              case 0: TR0 = 1;LCDShowSec();LCDShowMin();LCDShowHour();break;
  48   2              case 1: TR0 = 0;LCDShowSecBlink();break;
  49   2              case 2: TR0 = 0;LCDShowMinBlink();LCDShowSec();break;
  50   2              case 3: TR0 = 0;LCDShowHourBlink();LCDShowSec();LCDShowMin();break;
  51   2              default:break;
  52   2          }
  53   1      
  54   1          LEDShowStr(2,0,"Current Temp");
C51 COMPILER V9.01   MAIN                                                                  12/14/2022 12:14:45 PAGE 2   

  55   1      
  56   1      }
  57          
  58          //开始菜单
  59          void StartMenu()
  60          {
  61   1          LEDShowStr(1,0,"The DAS of TEMP");
  62   1          LEDShowStr(2,1,"v1.0 by Greg");
  63   1      }
  64          
  65          void LCDShowSec()
  66          {
  67   1            LCDSetPosition(10,1);
  68   1            LCDWritedata(Sec/10 + '0');
  69   1            LCDWritedata(Sec%10 + '0');
  70   1      }
  71          void LCDShowSecBlink()
  72          {
  73   1            LCDSetPosition(10,1);
  74   1            LCDWritedata(Sec/10 + '0');
  75   1            LCDWritedata(Sec%10 + '0');
  76   1            DelayXms(350);
  77   1            LEDShowStr(10,1,"  "); 
  78   1            DelayXms(200);
  79   1      }
  80          
  81          void LCDShowMin()
  82          {
  83   1             LCDSetPosition(7,1);
  84   1             LCDWritedata(Min/10 + '0');
  85   1             LCDWritedata(Min%10 + '0');
  86   1             LCDWritedata(':');
  87   1      }
  88          void LCDShowMinBlink()
  89          {
  90   1             LCDSetPosition(7,1);
  91   1             LCDWritedata(Min/10 + '0');
  92   1             LCDWritedata(Min%10 + '0');
  93   1             LCDWritedata(':');
  94   1             DelayXms(350);
  95   1             LEDShowStr(7,1,"  "); 
  96   1             DelayXms(200);
  97   1      }
  98          void LCDShowHour()
  99          {
 100   1              LCDSetPosition(4,1);
 101   1              LCDWritedata(Hour/10 + '0');
 102   1              LCDWritedata(Hour%10 + '0');
 103   1              LCDWritedata(':');    
 104   1      }
 105          void LCDShowHourBlink()
 106          {
 107   1              LCDSetPosition(4,1);
 108   1              LCDWritedata(Hour/10 + '0');
 109   1              LCDWritedata(Hour%10 + '0');
 110   1              LCDWritedata(':'); 
 111   1              DelayXms(350); 
 112   1              LEDShowStr(4,1,"  ");
 113   1              DelayXms(200);  
 114   1      }
 115          void Timer0Init(void)           //1毫秒@11.0592MHz
 116          {
C51 COMPILER V9.01   MAIN                                                                  12/14/2022 12:14:45 PAGE 3   

 117   1      //      AUXR &= 0x7F;           //定时器时钟12T模式
 118   1              TMOD &= 0xF0;           //设置定时器模式
 119   1              TMOD |= 0x01;           //设置定时器模式
 120   1              TL0 = 0x66;             //设置定时初值
 121   1              TH0 = 0xFC;             //设置定时初值
 122   1              TF0 = 0;                //清除TF0标志
 123   1          ET0 = 1;
 124   1          EA  = 1;
 125   1      }
 126          void Timer0ISR() interrupt 1
 127          {
 128   1          TR0 = 0;
 129   1          timerCnt++;
 130   1          if(timerCnt >= 1000)
 131   1          {
 132   2             timerCnt = 0;
 133   2             Sec++; 
 134   2             if(Sec >= 60)
 135   2             {
 136   3                Sec = 0;
 137   3                Min++;
 138   3                if(Min >= 60)
 139   3                {
 140   4                   Min = 0;
 141   4                   Hour++;
 142   4                   if(Hour >= 24)
 143   4                   {
 144   5                     Hour = 0; 
 145   5                   }          
 146   4                }      
 147   3             }    
 148   2          }
 149   1      
 150   1              TL0 = 0x66;             //设置定时初值
 151   1              TH0 = 0xFC;             //设置定时初值
 152   1          TR0 = 1;
 153   1      }
 154          
 155          
 156          void Init()//外部中断INT0 INT1初始化
 157          {
 158   1          IT0 = 1;
 159   1          IT1 = 1;
 160   1          EX0  = 1;
 161   1          EX1  = 1;
 162   1      }
 163          
 164          void INT0_ISR() interrupt 0
 165          {
 166   1         if(P3^2 == 0)
 167   1         {  
 168   2            DelayXms(5);
 169   2            if(P3^2 == 0)
 170   2            {               
 171   3                state++;
 172   3                 if(state > 3)
 173   3                 {
 174   4                   state = 0;
 175   4                 }       
 176   3            }  
 177   2              
 178   2         }
C51 COMPILER V9.01   MAIN                                                                  12/14/2022 12:14:45 PAGE 4   

 179   1      }
 180          
 181          void INT1_ISR() interrupt 2
 182          {
 183   1         DelayXms(10);
 184   1         if(P3^3 == 0)
 185   1         {
 186   2             switch(state)
 187   2             {
 188   3               case 1:Sec++;if(Sec >= 60) Sec = 0;break;
 189   3               case 2:Min++;if(Min >= 60) Min = 0;break;
 190   3               case 3:Hour++;if(Hour >= 24) Hour = 0;break;
 191   3               default:break;   
 192   3             }
 193   2         }
 194   1      
 195   1      }
 196           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    736    ----
   CONSTANT SIZE    =     45    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
