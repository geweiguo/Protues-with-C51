C51 COMPILER V9.01   LCD1602                                                               12/09/2022 23:11:38 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN ..\Output\LCD1602.obj
COMPILER INVOKED BY: E:\Program Files (x86)\Keil\C51\BIN\C51.EXE ..\Source\LCD1602.c BROWSE DEBUG OBJECTEXTEND PRINT(..\
                    -Listing\LCD1602.lst) OBJECT(..\Output\LCD1602.obj)

line level    source

   1          #include "LCD1602.h"
   2          #include <string.h>
   3          
   4          //unsigned char code str[] = {0x00,0x00,0x00,0x00,0x1f,0x00,0x00,0x00};
   5          /***************************************************************
   6            函数名称：LCDReadBF
   7            输入参数：无
   8            输出参数：无
   9            函数功能：1602读忙检测
  10          ****************************************************************/
  11          #ifndef LCD1602_4PINS
              void LCDReadBF()
              {
                  unsigned char state;
                  unsigned char i = 0;
                  LCD1602_DB = 0xFF;//IO口置1 做输入
                  LCD1602_RS = 0;
                  LCD1602_RW = 1;
                  do
                  {
                      LCD1602_EN = 1;
                      state =  LCD1602_DB;
                      LCD1602_EN = 0;
                      i++;
                      if(i>50)
                          break;
                  }
                  while(state & 0x80);
                  DelayXms(1);
              }
              #else 
  32          void LCDReadBF()
  33          {
  34   1          unsigned char state;
  35   1          unsigned char i = 0;
  36   1          LCD1602_DB |= 0xF0;//高四位IO口置1 低四位保持不变
  37   1          LCD1602_RS = 0;
  38   1          LCD1602_RW = 1;
  39   1          do
  40   1          {
  41   2              LCD1602_EN = 1;
  42   2              state =  LCD1602_DB & 0xF0;//读高四位
  43   2              LCD1602_EN = 0;
  44   2      
  45   2              LCD1602_EN = 1;
  46   2              state |=  (LCD1602_DB & 0x0F) >> 4;//读低四位,数据右移四位为低四位
  47   2              LCD1602_EN = 0;
  48   2              i++;
  49   2              if(i>50)
  50   2                  break;
  51   2          }
  52   1          while(state & 0x80);
  53   1          DelayXms(1);
  54   1      }
C51 COMPILER V9.01   LCD1602                                                               12/09/2022 23:11:38 PAGE 2   

  55          #endif
  56          /***************************************************************
  57            函数名称：LCDWriteCmd
  58            输入参数：cmd - 待写命令
  59            输出参数：无
  60            函数功能：LCD1602写命令
  61          ****************************************************************/
  62          #ifndef LCD1602_4PINS
              void LCDWriteCmd(unsigned char cmd)
              {   
                  LCDReadBF(); //等待忙检测，不忙时操作
                  LCD1602_RS = 0;
                  LCD1602_RW = 0;
                  LCD1602_DB = cmd; 
                  LCD1602_EN = 1;
                  LCD1602_EN = 0;
              }
              #else
  73          void LCDWriteCmd(unsigned char cmd)
  74          {   
  75   1          LCDReadBF(); //等待忙检测，不忙时操作
  76   1          LCD1602_RS = 0;  //LCD1602_RS = 0：命令
  77   1          LCD1602_RW = 0;  //写
  78   1          LCD1602_DB = cmd; //第一次发的高四位
  79   1          DelayXms(5);
  80   1          LCD1602_EN = 1;
  81   1          LCD1602_EN = 0;
  82   1      
  83   1          LCD1602_DB = cmd << 4; //读低四位
  84   1          DelayXms(1);
  85   1          LCD1602_EN = 1;
  86   1          LCD1602_EN = 0;
  87   1      }
  88          #endif
  89          /***************************************************************
  90            函数名称：LCDWritedata
  91            输入参数：dat - 待写入数据
  92            输出参数：无
  93            函数功能：LCD1602写数据
  94          ****************************************************************/
  95          #ifndef LCD1602_4PINS
              void LCDWritedata(unsigned char dat)
              {   
                  LCDReadBF(); //等待忙检测
                  LCD1602_RS = 1;
                  LCD1602_RW = 0;
                  LCD1602_DB = dat; 
                  LCD1602_EN = 1;
                  LCD1602_EN = 0;
              }
              #else
 106          void LCDWritedata(unsigned char dat)
 107          {   
 108   1          LCDReadBF(); //等待忙检测
 109   1          LCD1602_RS = 1;  //LCD1602_RS = 1：数据
 110   1          LCD1602_RW = 0;  //写
 111   1          LCD1602_DB = dat;//第一次发的高四位
 112   1          DelayXms(1); 
 113   1          LCD1602_EN = 1;
 114   1          LCD1602_EN = 0;
 115   1      
 116   1          LCD1602_DB = dat << 4; //读低四位
C51 COMPILER V9.01   LCD1602                                                               12/09/2022 23:11:38 PAGE 3   

 117   1          DelayXms(1); 
 118   1          LCD1602_EN = 1;
 119   1          LCD1602_EN = 0;
 120   1      }
 121          #endif
 122          /***************************************************************
 123            函数名称：LCDInit
 124            输入参数：无
 125            输出参数：无
 126            函数功能：LCD1602初始化
 127          ****************************************************************/
 128          #ifndef LCD1602_4PINS
              void LCDInit()
              {
                  LCDWriteCmd(LCD_MODE_PIN8);      //显示莫斯设置 两行 5*8点阵
                  LCDWriteCmd(LCD_DIS_ON);        //显示开 光标关
                  LCDWriteCmd( LCD_CURSOR_RIGHT ); //  光标右移，显示不移动
                  LCDWriteCmd( LCD_SCREEN_CLR  );  // 清屏
              }
              #else
 137          void LCDInit()
 138          {   
 139   1          LCDWriteCmd(0x33);
 140   1          DelayXms(1);
 141   1          LCDWriteCmd(0x32);
 142   1          LCDWriteCmd(LCD_MODE_PIN4);      //4位数据口  两行显示  5*8点阵字符
 143   1          LCDWriteCmd(LCD_DIS_ON);        //显示开 光标关
 144   1          LCDWriteCmd( LCD_CURSOR_RIGHT ); //  光标右移，显示不移动
 145   1          LCDWriteCmd( LCD_SCREEN_CLR  );  // 清屏
 146   1      }
 147          #endif
 148          /***************************************************************
 149            函数名称：LCDSetPosition   x:0-15  y:0-1
 150            输入参数：x-列，y-行
 151            输出参数：无
 152            函数功能：LCD1602初始化
 153          ****************************************************************/
 154          void  LCDSetPosition(unsigned char x,unsigned char y)  //x 横向坐标 y 纵向坐标
 155          {         
 156   1          if(0 == y)
 157   1          {
 158   2              LCDWriteCmd(0x80 | x);
 159   2          }
 160   1          else
 161   1          {
 162   2              LCDWriteCmd(0x80 | (0x40 + x));
 163   2          }
 164   1      }
 165          /***************************************************************
 166            函数名称：LEDShowStr
 167            输入参数：x-列，y-行 *str-待显示字符数据
 168            输出参数：无
 169            函数功能：显示字符
 170          ****************************************************************/
 171          void LEDShowStr(unsigned char x,unsigned char y,unsigned char *Str)
 172          {
 173   1          unsigned char i;
 174   1          unsigned char strerr[] = "err:LEDShowStr()";
 175   1          
 176   1          if((0 == y || 1 == y)&&(x>=0 && x<=15))
 177   1          { 
 178   2              LCDSetPosition(x,y);
C51 COMPILER V9.01   LCD1602                                                               12/09/2022 23:11:38 PAGE 4   

 179   2              while(*Str != '\0')
 180   2              {
 181   3                  LCDWritedata(*Str++);            
 182   3              }   
 183   2          }
 184   1       
 185   1          else
 186   1          {
 187   2            LCDWriteCmd(0x80);
 188   2           
 189   2            for(i = 0;i<strlen(strerr);i++)
 190   2            {
 191   3              LCDWritedata(strerr[i]);
 192   3              DelayXms(100);
 193   3            }        
 194   2          }    
 195   1      }
 196          //第一种
 197          /***************************************************************
 198            函数名称：LCDWriteCGRAM
 199            输入参数：*str-待显示字符数据
 200            输出参数：无
 201            函数功能：显示自定义字符
 202          ****************************************************************/
 203          void LCDWriteCGRAM(unsigned char *str)
 204          {
 205   1          unsigned char i;
 206   1          LCDWriteCmd(0x40); //1、构造自定义字符，CGRAM起始地址
 207   1          for(i = 0;i< 8;i++)
 208   1          {
 209   2             LCDWritedata(str[i]); 
 210   2          
 211   2          }
 212   1          //2.显示字符
 213   1          LCDWriteCmd(0x80 | 0x05);
 214   1          LCDWritedata(0x00); 
 215   1      }
 216          
 217          //第二种
 218          /***************************************************************
 219            函数名称：LCDSetChar
 220            输入参数：x-列，y-行  pos-CGRAM位置 *str-自定义字符数据
 221            输出参数：无
 222            函数功能：显示自定义字符
 223          ****************************************************************/
 224          void LCDSetChar(unsigned x,unsigned char y,unsigned char pos,unsigned char *str)
 225          {
 226   1          unsigned char i;
 227   1          //先构造自定义字符 确定位置CGRAM
 228   1          for(i = 0; i<8;i++)
 229   1          {
 230   2              LCDWriteCmd(0x40 + pos*8 +i); 
 231   2              LCDWritedata(*(str+i));    
 232   2          }
 233   1          //第二步 显示
 234   1          LCDSetPosition(x,y);
 235   1          LCDWritedata(0x00 + pos); 
 236   1      
 237   1      }
 238          /***************************************************************
 239            函数名称：IntegerToStr 
 240            输入参数：dat-整型数，*str-字符数据
C51 COMPILER V9.01   LCD1602                                                               12/09/2022 23:11:38 PAGE 5   

 241            输出参数：len- 字符数组的字符个数 
 242            函数功能：整型转字符串
 243          ****************************************************************/
 244          unsigned char IntegerToStr(long dat,unsigned char *str)
 245          {
 246   1         unsigned char i;
 247   1         unsigned char len;
 248   1         unsigned char buf[11];
 249   1      
 250   1         if(dat < 0)
 251   1             {
 252   2                dat = -dat; //如果是负数，取绝对值
 253   2                *str++ = '-';
 254   2                len++;
 255   2             }
 256   1          
 257   1         do
 258   1             {
 259   2                buf[i++] = dat%10 + '0';     
 260   2                dat /= 10;
 261   2          
 262   2             } while(dat > 0); 
 263   1         
 264   1         len += i;
 265   1      
 266   1         while(i-- > 0)
 267   1             {        
 268   2               *str++ = buf[i];
 269   2             } 
 270   1      
 271   1         *str = '\0';
 272   1         return len;
 273   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    618    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      58
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
