C51 COMPILER V9.01   LCD1602                                                               12/09/2022 22:01:13 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN ..\Output\LCD1602.obj
COMPILER INVOKED BY: E:\Program Files (x86)\Keil\C51\BIN\C51.EXE ..\Source\LCD1602.c BROWSE DEBUG OBJECTEXTEND PRINT(..\
                    -Listing\LCD1602.lst) OBJECT(..\Output\LCD1602.obj)

line level    source

   1          #include "LCD1602.h"
   2          #include <string.h>
   3          
   4          //unsigned char code str[] = {0x00,0x00,0x00,0x00,0x1f,0x00,0x00,0x00};
   5          /***************************************************************
   6            函数名称：LCDReadBF
   7            输入参数：无
   8            输出参数：无
   9            函数功能：1602读忙检测
  10          ****************************************************************/
  11          void LCDReadBF()
  12          {
  13   1          unsigned char state;
  14   1          unsigned char i = 0;
  15   1          LCD1602_DB = 0xFF;//IO口置1 做输入
  16   1          LCD1602_RS = 0;
  17   1          LCD1602_RW = 1;
  18   1          do
  19   1          {
  20   2              LCD1602_EN = 1;
  21   2              state =  LCD1602_DB;
  22   2              LCD1602_EN = 0;
  23   2              i++;
  24   2              if(i>50)
  25   2                  break;
  26   2          }
  27   1          while(state & 0x80);
  28   1          DelayXms(1);
  29   1      }
  30          /***************************************************************
  31            函数名称：LCDWriteCmd
  32            输入参数：cmd - 待写命令
  33            输出参数：无
  34            函数功能：LCD1602写命令
  35          ****************************************************************/
  36          void LCDWriteCmd(unsigned char cmd)
  37          {   
  38   1          LCDReadBF(); //等待忙检测，不忙时操作
  39   1          LCD1602_RS = 0;
  40   1          LCD1602_RW = 0;
  41   1          LCD1602_DB = cmd; 
  42   1          LCD1602_EN = 1;
  43   1          LCD1602_EN = 0;
  44   1      }
  45          /***************************************************************
  46            函数名称：LCDWritedata
  47            输入参数：dat - 待写入数据
  48            输出参数：无
  49            函数功能：LCD1602写数据
  50          ****************************************************************/
  51          void LCDWritedata(unsigned char dat)
  52          {   
  53   1          LCDReadBF(); //等待忙检测
  54   1          LCD1602_RS = 1;
C51 COMPILER V9.01   LCD1602                                                               12/09/2022 22:01:13 PAGE 2   

  55   1          LCD1602_RW = 0;
  56   1          LCD1602_DB = dat; 
  57   1          LCD1602_EN = 1;
  58   1          LCD1602_EN = 0;
  59   1      }
  60          /***************************************************************
  61            函数名称：LCDInit
  62            输入参数：无
  63            输出参数：无
  64            函数功能：LCD1602初始化
  65          ****************************************************************/
  66          void LCDInit()
  67          {
  68   1          LCDWriteCmd(LCD_MODE_PIN8);      //显示莫斯设置 两行 5*8点阵
  69   1          LCDWriteCmd(LCD_DIS_ON);        //显示开 光标关
  70   1          LCDWriteCmd( LCD_CURSOR_RIGHT ); //  光标右移，显示不移动
  71   1          LCDWriteCmd( LCD_SCREEN_CLR  );  // 清屏
  72   1      }
  73          /***************************************************************
  74            函数名称：LCDSetPosition   x:0-15  y:0-1
  75            输入参数：x-列，y-行
  76            输出参数：无
  77            函数功能：LCD1602初始化
  78          ****************************************************************/
  79          void  LCDSetPosition(unsigned char x,unsigned char y)  //x 横向坐标 y 纵向坐标
  80          {         
  81   1          if(0 == y)
  82   1          {
  83   2              LCDWriteCmd(0x80 | x);
  84   2          }
  85   1          else
  86   1          {
  87   2              LCDWriteCmd(0x80 | (0x40 + x));
  88   2          }
  89   1      }
  90          /***************************************************************
  91            函数名称：LEDShowStr
  92            输入参数：x-列，y-行 *str-待显示字符数据
  93            输出参数：无
  94            函数功能：显示字符
  95          ****************************************************************/
  96          void LEDShowStr(unsigned char x,unsigned char y,unsigned char *Str)
  97          {
  98   1          unsigned char i;
  99   1          unsigned char strerr[] = "err:LEDShowStr()";
 100   1          
 101   1          if((0 == y || 1 == y)&&(x>=0 && x<=15))
 102   1          { 
 103   2              LCDSetPosition(x,y);
 104   2              while(*Str != '\0')
 105   2              {
 106   3                  LCDWritedata(*Str++);            
 107   3              }   
 108   2          }
 109   1       
 110   1          else
 111   1          {
 112   2            LCDWriteCmd(0x80);
 113   2           
 114   2            for(i = 0;i<strlen(strerr);i++)
 115   2            {
 116   3              LCDWritedata(strerr[i]);
C51 COMPILER V9.01   LCD1602                                                               12/09/2022 22:01:13 PAGE 3   

 117   3              DelayXms(100);
 118   3            }        
 119   2          }    
 120   1      }
 121          //第一种
 122          /***************************************************************
 123            函数名称：LCDWriteCGRAM
 124            输入参数：*str-待显示字符数据
 125            输出参数：无
 126            函数功能：显示自定义字符
 127          ****************************************************************/
 128          void LCDWriteCGRAM(unsigned char *str)
 129          {
 130   1          unsigned char i;
 131   1          LCDWriteCmd(0x40); //1、构造自定义字符，CGRAM起始地址
 132   1          for(i = 0;i< 8;i++)
 133   1          {
 134   2             LCDWritedata(str[i]); 
 135   2          
 136   2          }
 137   1          //2.显示字符
 138   1          LCDWriteCmd(0x80 | 0x05);
 139   1          LCDWritedata(0x00); 
 140   1      }
 141          
 142          //第二种
 143          /***************************************************************
 144            函数名称：LCDSetChar
 145            输入参数：x-列，y-行  pos-CGRAM位置 *str-自定义字符数据
 146            输出参数：无
 147            函数功能：显示自定义字符
 148          ****************************************************************/
 149          void LCDSetChar(unsigned x,unsigned char y,unsigned char pos,unsigned char *str)
 150          {
 151   1          unsigned char i;
 152   1          //先构造自定义字符 确定位置CGRAM
 153   1          for(i = 0; i<8;i++)
 154   1          {
 155   2              LCDWriteCmd(0x40 + pos*8 +i); 
 156   2              LCDWritedata(*(str+i));    
 157   2          }
 158   1          //第二步 显示
 159   1          LCDSetPosition(x,y);
 160   1          LCDWritedata(0x00 + pos); 
 161   1      
 162   1      }
 163          /***************************************************************
 164            函数名称：IntegerToStr 
 165            输入参数：dat-整型数，*str-字符数据
 166            输出参数：len- 字符数组的字符个数 
 167            函数功能：整型转字符串
 168          ****************************************************************/
 169          unsigned char IntegerToStr(long dat,unsigned char *str)
 170          {
 171   1         unsigned char i;
 172   1         unsigned char len;
 173   1         unsigned char buf[11];
 174   1      
 175   1         if(dat < 0)
 176   1             {
 177   2                dat = -dat; //如果是负数，取绝对值
 178   2                *str++ = '-';
C51 COMPILER V9.01   LCD1602                                                               12/09/2022 22:01:13 PAGE 4   

 179   2                len++;
 180   2             }
 181   1          
 182   1         do
 183   1             {
 184   2                buf[i++] = dat%10 + '0';     
 185   2                dat /= 10;
 186   2          
 187   2             } while(dat > 0); 
 188   1         
 189   1         len += i;
 190   1      
 191   1         while(i-- > 0)
 192   1             {        
 193   2               *str++ = buf[i];
 194   2             } 
 195   1      
 196   1         *str = '\0';
 197   1         return len;
 198   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    534    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      58
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
