C51 COMPILER V9.01   MAIN                                                                  11/24/2022 10:25:27 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\Output\main.obj
COMPILER INVOKED BY: E:\Program Files (x86)\Keil\C51\BIN\C51.EXE ..\Source\main.c BROWSE DEBUG OBJECTEXTEND PRINT(..\Lis
                    -ting\main.lst) OBJECT(..\Output\main.obj)

line level    source

   1          #include <reg52.h>
   2          #include "matrixkey.h"
   3          #include "display.h"
   4          #include "delay.h"
   5          
   6          unsigned char KeypressFlag = 0;
   7          unsigned char DisNumFlag = 0;
   8          unsigned char AddFlag = 0;
   9          unsigned char SubFlag = 0;
  10          unsigned char MulNumFlag = 0;
  11          unsigned char DivNumFlag = 0;
  12          unsigned char Keyflag = 0;
  13          unsigned char Num = 0; 
  14          unsigned int temp = 0;
  15          unsigned int Number1 = 0;
  16          unsigned int Result = 0;
  17          
  18          void Distemp_Service();
  19          void DisNumber1_Service();
  20          void DisResult_Service();
  21          
  22          void INT0_int()
  23          {
  24   1          IT0 = 1;
  25   1          EX0 = 1;
  26   1          EA  = 1;
  27   1      
  28   1      }
  29          
  30          void ESR_INT0() interrupt 0
  31          {
  32   1         DelayXms(10);
  33   1         if(0 == INT0)
  34   1         {
  35   2            KeypressFlag = 1;
  36   2         }
  37   1        
  38   1      
  39   1      }
  40          
  41          
  42          void main()
  43          {  
  44   1      
  45   1         INT0_int();
  46   1         P1 = 0x0f;
  47   1      
  48   1         while(1)
  49   1         {    
  50   2             if(KeypressFlag == 1)
  51   2             {
  52   3                KeypressFlag = 0;
  53   3                
  54   3                switch(MatrixKey_Scan())
C51 COMPILER V9.01   MAIN                                                                  11/24/2022 10:25:27 PAGE 2   

  55   3                 {
  56   4                    case 0:  temp = (temp*10 + MatrixKey_Scan());
  57   4                             Keyflag  = 1;
  58   4                             DisNumFlag = 22;
  59   4                             break;
  60   4                    case 1:  
  61   4                    case 2:  
  62   4                    case 3:  
  63   4                    case 4:  
  64   4                    case 5:  
  65   4                    case 6:  
  66   4                    case 7:  
  67   4                    case 8:  
  68   4                    case 9:  if(0 == Keyflag) 
  69   4                                 {temp = MatrixKey_Scan();Keyflag  = 1;}
  70   4                             else if(1 == Keyflag) 
  71   4                                 {temp = temp*10 + MatrixKey_Scan(); }
  72   4                             DisNumFlag = 22;
  73   4                             break;
  74   4              
  75   4                    case 10: Number1 = temp;
  76   4                             AddFlag = 1;                     
  77   4                             temp = 0;Keyflag  = 0;
  78   4                             DisNumFlag = 25;  //加法
  79   4                             break;
  80   4                    case 11: Number1 = temp;
  81   4                             SubFlag = 1;
  82   4                             //Result = Number1 - temp; 
  83   4                             temp = 0;Keyflag  = 0;
  84   4                             DisNumFlag = 25;  //减法
  85   4                             break;
  86   4                    case 13: Number1 = temp;
  87   4                             MulNumFlag = 1;
  88   4                             //Result = Number1 * temp; 
  89   4                             temp = 0;Keyflag  = 0;
  90   4                             DisNumFlag = 25;  //乘法
  91   4                             break;
  92   4                    case 14: Number1 = temp;
  93   4                             DivNumFlag = 1;
  94   4                             //Result = Number1 / temp; 
  95   4                             temp = 0;Keyflag  = 0;
  96   4                             DisNumFlag = 25;  //除法
  97   4                             break;
  98   4      
  99   4                    case 12: Number1 = 0; temp = 0;Keyflag  = 0;
 100   4                             DisNumFlag = 25; //清零
 101   4                             break;
 102   4          
 103   4                    case 15: if(AddFlag == 1)
 104   4                                {
 105   5                                  AddFlag = 0;
 106   5                                  Result = Number1 + temp; 
 107   5                                }
 108   4                                  
 109   4                             if(SubFlag == 1)
 110   4                                 {
 111   5                                  SubFlag = 0;
 112   5                                  Result = Number1 - temp;
 113   5                                 }
 114   4                                  
 115   4                             if(MulNumFlag == 1)
 116   4                                  {
C51 COMPILER V9.01   MAIN                                                                  11/24/2022 10:25:27 PAGE 3   

 117   5                                   MulNumFlag = 0;
 118   5                                   Result = Number1 * temp; 
 119   5                                  }
 120   4                                  
 121   4                             if(DivNumFlag == 1)
 122   4                                  {
 123   5                                   DivNumFlag = 0;
 124   5                                   Result = Number1 / temp; 
 125   5                                  }
 126   4                                                              
 127   4                              Keyflag  = 0;
 128   4                              DisNumFlag = 30;
 129   4                             break;  //输出计算结果
 130   4              
 131   4                    default: break;       
 132   4                  }
 133   3                  
 134   3                                   
 135   3                  if(22 == DisNumFlag) 
 136   3                      {
 137   4                       Distemp_Service(); 
 138   4                      } 
 139   3                  if(25 == DisNumFlag) 
 140   3                      {
 141   4                       DisNumber1_Service(); 
 142   4                      } 
 143   3                  if(30 == DisNumFlag) 
 144   3                      {
 145   4                       DisResult_Service(); 
 146   4                      }  
 147   3             
 148   3             }
 149   2                              
 150   2             Display(); 
 151   2              
 152   2          }
 153   1      }
 154          
 155          void Distemp_Service()
 156          {
 157   1             LEDBuf[0] = 23;
 158   1             LEDBuf[1] = 23;
 159   1             LEDBuf[2] = 23;
 160   1      
 161   1              if(temp >= 10000) { LEDBuf[3] = temp/10000%10;}
 162   1              else LEDBuf[3] = 23;
 163   1      
 164   1              if(temp >= 1000){LEDBuf[4] = temp/1000%10;}
 165   1              else LEDBuf[4] = 23;
 166   1      
 167   1              if(temp >= 100){ LEDBuf[5] = temp/100%10;}
 168   1              else LEDBuf[5] = 23;
 169   1      
 170   1              if(temp >= 10){ LEDBuf[6] = temp/10%10;}
 171   1              else LEDBuf[6] = 23;
 172   1      
 173   1      
 174   1             LEDBuf[7] = temp%10;
 175   1      
 176   1      }
 177          void DisNumber1_Service()
 178          {
C51 COMPILER V9.01   MAIN                                                                  11/24/2022 10:25:27 PAGE 4   

 179   1             LEDBuf[0] = 23;
 180   1             LEDBuf[1] = 23;
 181   1             LEDBuf[2] = 23;
 182   1                    
 183   1             if(Number1 >= 10000)    
 184   1                  {LEDBuf[3] = Number1/10000%10;}
 185   1             else   LEDBuf[3] = 23;
 186   1             
 187   1             if(Number1 >= 1000) 
 188   1                  {LEDBuf[4] = Number1/1000%10;}
 189   1             else   LEDBuf[4] = 23;
 190   1      
 191   1             if(Number1 >= 100) 
 192   1                  {LEDBuf[5] = Number1/100%10;}
 193   1             else   LEDBuf[5] = 23;
 194   1      
 195   1             if(Number1 >= 10) 
 196   1                  {LEDBuf[6] = Number1/10%10;}
 197   1             else   LEDBuf[6] = 23;
 198   1             LEDBuf[7] = Number1%10;
 199   1      
 200   1      }
 201          void DisResult_Service()
 202          {
 203   1             LEDBuf[0] = 23;
 204   1             LEDBuf[1] = 23;
 205   1             LEDBuf[2] = 23;
 206   1             
 207   1             if(Result >= 10000)    
 208   1                  LEDBuf[3] = Result/10000%10;
 209   1             else   LEDBuf[3] = 23;
 210   1             
 211   1             if(Result >= 1000) 
 212   1                  LEDBuf[4] = Result/1000%10;
 213   1             else   LEDBuf[4] = 23;
 214   1      
 215   1             if(Result >= 100) 
 216   1                  LEDBuf[5] = Result/100%10;
 217   1             else   LEDBuf[5] = 23;
 218   1      
 219   1             if(Result >= 10) 
 220   1                  LEDBuf[6] = Result/10%10;
 221   1             else   LEDBuf[6] = 23;
 222   1             LEDBuf[7] = Result%10;
 223   1      
 224   1      }       
 225          
 226          
 227          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    930    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
